{"ast":null,"code":"var _jsxFileName = \"/home/sakshamjaiswal1/Work/react task/application/src/Pages/dummyForm/Sign.js\",\n    _s = $RefreshSig$();\n\nimport { React, useRef } from 'react';\nimport SignaturePad from 'react-signature-canvas';\nimport './sign.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sign() {\n  _s();\n\n  let sigPad = useRef({});\n  let data = '';\n\n  const clear = () => {\n    sigPad.current.clear();\n  };\n\n  const save = () => {\n    data = sigPad.current.toDataURL();\n  };\n\n  const show = () => {\n    sigPad.current.fromDataURL(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignaturePad, {\n    ref: sigPad,\n    canvasProps: {\n      width: 500,\n      height: 200\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sign, \"irWhAHebMmUVbIHRKvRQ7HDxsUU=\");\n\n_c = Sign;\nexport default Sign;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sign\");","map":{"version":3,"sources":["/home/sakshamjaiswal1/Work/react task/application/src/Pages/dummyForm/Sign.js"],"names":["React","useRef","SignaturePad","Sign","sigPad","data","clear","current","save","toDataURL","show","fromDataURL","width","height"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,MAAd,QAA2B,OAA3B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAO,YAAP;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AACZ,MAAIC,MAAM,GAACH,MAAM,CAAC,EAAD,CAAjB;AACF,MAAII,IAAI,GAAC,EAAT;;AACE,QAAMC,KAAK,GAAC,MAAI;AACZF,IAAAA,MAAM,CAACG,OAAP,CAAeD,KAAf;AACH,GAFD;;AAGA,QAAME,IAAI,GAAC,MAAI;AACXH,IAAAA,IAAI,GAACD,MAAM,CAACG,OAAP,CAAeE,SAAf,EAAL;AAEH,GAHD;;AAIA,QAAMC,IAAI,GAAC,MAAI;AACXN,IAAAA,MAAM,CAACG,OAAP,CAAeI,WAAf,CAA2BN,IAA3B;AACH,GAFD;;AAIA,sBAGI,QAAC,YAAD;AAAc,IAAA,GAAG,EAAED,MAAnB;AAA4B,IAAA,WAAW,EAAE;AAACQ,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE;AAArB;AAAzC;AAAA;AAAA;AAAA;AAAA,UAHJ;AAMH;;GApBQV,I;;KAAAA,I;AAsBT,eAAeA,IAAf","sourcesContent":["import {React,useRef} from 'react'\nimport SignaturePad from 'react-signature-canvas'\nimport './sign.css'\n\n\nfunction Sign() {\n    let sigPad=useRef({})\n  let data=''\n    const clear=()=>{\n        sigPad.current.clear()\n    }\n    const save=()=>{\n        data=sigPad.current.toDataURL()\n      \n    }\n    const show=()=>{\n        sigPad.current.fromDataURL(data)\n    }\n\n    return (\n \n     \n        <SignaturePad ref={sigPad}  canvasProps={{width: 500, height: 200}} />\n  \n    )\n}\n\nexport default Sign\n"]},"metadata":{},"sourceType":"module"}